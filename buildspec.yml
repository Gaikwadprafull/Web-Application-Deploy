version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - REPOSITORY_URI=648908580279.dkr.ecr.ap-south-1.amazonaws.com/dev-env
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin $REPOSITORY_URI

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Triggering deployment on EC2...
      - |
        INSTANCE_ID=$(aws ec2 describe-instances \
          --filters "Name=tag:Name,Values=dev-AppServer" \
          --query "Reservations[*].Instances[*].InstanceId" \
          --output text --region ap-south-1)
        if [ -z "$INSTANCE_ID" ]; then
          echo "❌ ERROR: No EC2 instance found with tag Name=dev-AppServer"
          exit 1
        fi
        echo "✅ Found EC2 Instance: $INSTANCE_ID"
        aws ssm send-command \
          --document-name "AWS-RunShellScript" \
          --comment "Deploying latest Docker image to EC2" \
          --instance-ids "$INSTANCE_ID" \
          --parameters '{"commands":["aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 648908580279.dkr.ecr.ap-south-1.amazonaws.com","docker pull 648908580279.dkr.ecr.ap-south-1.amazonaws.com/dev-env:latest","docker stop dev-env || true","docker rm dev-env || true","docker run -d --name dev-env -p 5000:5000 648908580279.dkr.ecr.ap-south-1.amazonaws.com/dev-env:latest"]}' \
          --region ap-south-1
